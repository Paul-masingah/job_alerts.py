import os
import smtplib
import json
import requests
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# Environment variables (from GitHub Secrets or local .env for testing)
EMAIL_USER = os.getenv("EMAIL_USER")
EMAIL_PASS = os.getenv("EMAIL_PASS")
TO_EMAIL = os.getenv("TO_EMAIL")
SERPAPI_KEY = os.getenv("SERPAPI_KEY")

# Job query settings
QUERIES = [
    "Frontend Advanced Developer Visa Sponsorship Remote",
    "Frontend React Developer Hybrid Visa Sponsorship",
    "Frontend Engineer Visa Sponsorship Remote",
]
LOCATIONS = ["UK", "US", "Nigeria", "Remote", "Worldwide"]

# Filters based on your resume preferences
FILTER_KEYWORDS = [
    "React", "Next.js", "Tailwind", "Visa Sponsorship",
    "Remote", "Hybrid", "Frontend", "JavaScript"
]

DB_FILE = "seen_jobs.json"

def load_seen():
    if os.path.exists(DB_FILE):
        with open(DB_FILE, "r") as f:
            return set(json.load(f))
    return set()

def save_seen(seen):
    with open(DB_FILE, "w") as f:
        json.dump(list(seen), f)

def matches_preferences(job):
    text = f"{job.get('title','')} {job.get('company','')} {job.get('location','')}".lower()
    return any(keyword.lower() in text for keyword in FILTER_KEYWORDS)

def fetch_jobs():
    jobs = []
    for query in QUERIES:
        for loc in LOCATIONS:
            url = f"https://serpapi.com/search.json?engine=google_jobs&q={query}+{loc}&api_key={SERPAPI_KEY}"
            res = requests.get(url).json()
            if "jobs_results" in res:
                for job in res["jobs_results"]:
                    job_entry = {
                        "title": job.get("title"),
                        "company": job.get("company_name"),
                        "location": job.get("location"),
                        "link": job.get("related_links", [{}])[0].get("link", "#")
                    }
                    if matches_preferences(job_entry):
                        jobs.append(job_entry)
    return jobs

def send_email(new_jobs):
    if not new_jobs:
        print("âœ… No new jobs today.")
        return
    subject = "New Frontend Advanced Developer Jobs"
    body = ""
    for i, job in enumerate(new_jobs, 1):
        body += f"{i}. {job['title']} â€“ {job['company']} â€“ {job['location']} â€“ <a href='{job['link']}'>Apply Here</a><br>\n"

    msg = MIMEMultipart()
    msg["From"] = EMAIL_USER
    msg["To"] = TO_EMAIL
    msg["Subject"] = subject
    msg.attach(MIMEText(body, "html"))

    with smtplib.SMTP("smtp.gmail.com", 587) as server:
        server.starttls()
        server.login(EMAIL_USER, EMAIL_PASS)
        server.sendmail(EMAIL_USER, TO_EMAIL, msg.as_string())

    print(f"ðŸ“§ Email sent to {TO_EMAIL} with {len(new_jobs)} jobs.")

def main():
    seen = load_seen()
    jobs = fetch_jobs()
    new_jobs = [job for job in jobs if job["link"] not in seen]
    if new_jobs:
        send_email(new_jobs)
        seen.update([job["link"] for job in new_jobs])
        save_seen(seen)

if __name__ == "__main__":
    print("ðŸš€ Running job alerts in local test mode...")
    main()
